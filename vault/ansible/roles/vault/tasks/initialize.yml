---
# Initialize the vault

- name: Check if Vault is initialized
  ansible.builtin.uri:
    url: "http://localhost:{{ vault_port }}/v1/sys/init"
    method: GET
  register: vault_init_status

- name: Initialize Vault if not already initialized
  ansible.builtin.uri:
    url: "http://localhost:{{ vault_port }}/v1/sys/init"
    method: POST
    body_format: json
    body:
      secret_shares: "{{ vault_init_secret_shares }}"
      secret_threshold: "{{ vault_init_secret_threshold }}"
  register: vault_init_result
  when: not vault_init_status.json.initialized

- name: Set facts for keys and token
  ansible.builtin.set_fact:
    unseal_keys: "{{ vault_init_result.json['keys'] }}"
    root_token: "{{ vault_init_result.json['root_token'] }}"
  when: not vault_init_result.skipped | default(false) and vault_init_result.json['keys'] is defined and vault_init_result.json['root_token'] is defined

- name: Save Vault keys securely
  ansible.builtin.copy:
    content: |
      Root Token: {{ root_token }}
      Unseal Key: {{ unseal_keys[0] }}
    dest: "/opt/vault/vault-keys.txt"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: '0600'
  when: unseal_keys is defined and unseal_keys | length > 0

- name: Unseal Vault
  ansible.builtin.uri:
    url: "http://localhost:{{ vault_port }}/v1/sys/unseal"
    method: POST
    body_format: json
    body:
      key: "{{ unseal_keys[0] }}"
  when: unseal_keys is defined and unseal_keys | length > 0

- name: Check if keys file exists (for already initialized Vault)
  ansible.builtin.stat:
    path: "/opt/vault/vault-keys.txt"
  register: vault_keys_file

- name: Create auto-unseal script
  ansible.builtin.template:
    src: vault-unseal.sh.j2
    dest: "/opt/vault/vault-unseal.sh"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: '0750'

- name: Create auto-unseal service
  ansible.builtin.template:
    src: vault-unseal.service.j2
    dest: /etc/systemd/system/vault-unseal.service
    owner: root
    group: root
    mode: '0644'
  notify: reload systemd

- name: Enable vault-unseal service
  ansible.builtin.systemd:
    name: vault-unseal
    enabled: yes
    daemon_reload: yes

- name: Start vault-unseal service if keys exist
  ansible.builtin.systemd:
    name: vault-unseal
    state: started
  when: vault_keys_file.stat.exists

- name: Display initialization status
  ansible.builtin.debug:
    msg: |
      {% if not vault_init_status.json.initialized and vault_init_result is defined %}
      Vault has been initialized successfully!
      Root token and unseal key saved to /opt/vault/vault-keys.txt
      {% else %}
      Vault was already initialized.
      {% if vault_keys_file.stat.exists %}
      Keys file exists at /opt/vault/vault-keys.txt
      {% else %}
      WARNING: Keys file not found! You may need to manually manage unsealing.
      {% endif %}
      {% endif %}